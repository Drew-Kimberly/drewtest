Help link: https://drupal.org/developing/api/database


SELECT Query

	//SELECT column1, column2, ..., columnN
	//FROM {tablename}
	//WHERE column1 = $value1
	//AND column2 <> $value2
	//ORDERBY 'sticky', DESC
	//ORDERBY 'created', DESC
	//LIMIT 10;

	$query = db_select('tablename', 'optional alias (i.e. 'd' for 'demo')
		->fields('tablename or alias if given', array('column1', 'column2', ..., 'columnN'))
		->condition('column1', 'value1')
		->condition('column2', 'value2', 'optional <>')
		->orderBy('sticky', 'DESC')
		->orderBy('created', 'DESC')
		->limit(variable_get('default_nodes_main', 10))
		->extend('PagerDefault');
	return $query->execute()->fetch(); //Many different types of fetch... i.e. fetchObject().
	//Calling fields() with no field list will result in a "SELECT *" query.



INSERT Query

	//INSERT INTO {tablename} ('column1', 'column2') VALUES ('value1', 'value2');

	$query = db_insert('tablename')
		->fields(array('column1', 'column2'))
		->values(array('column1' => 'value1', 'column2' => 'value2'))
		->execute();



UPDATE Query

	//UPDATE {tablename}
	//SET column1 = value1, column2 = value2
	//WHERE column3 >= value3

	$query = db_update('tablename')
		->fields(array('column1' => 'value1', 'column2' => 'value2'))
		->condition('column3', 'value3', '>=')
		->execute();
	//Third parameter for ->condition() is optional and defaults to "="



MERGE Query

	//In tablename, if the field = value exists, update field1 = value1 && field2 = value2
	//UPDATE {tablename} SET column1 = value1, column2 = value2 WHERE column = value

	//If tablename, if the field = value does NOT exist,
	//INSERT INTO {tablename} ('column', 'column1', 'column2') VALUES ('value', 'value1', 'value2');

	db_merge('tablename')
		->key(array('column' => 'value'))
		->fields(array(
			'column1' => 'value1',
			'column2' => 'value2',
		))
		->execute();



DELETE Query

	//DELETE FROM {tablename} WHERE column = value;

	$query = db_delete('tablename')
		->condition('column', 'value')
		->execute();