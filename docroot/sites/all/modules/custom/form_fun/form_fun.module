<?php
/*
 * Implements hook_menu().
 */
function form_fun_menu() {
    $items = array();
    $items['form_fun/cake'] = array(
        'title' => 'Cake or Pie?',
        'page callback' => 'form_fun_cake_page',
        'access arguments' => array('access content'),
        'file' => 'form_fun.cake.inc',
        'weight' => 1,
    );

    $items['form_fun/tree'] = array(
        'title' => "I'm lost!",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('form_fun_tree'), //Pass in builder function to drupal_get_form()
        'access arguments' => array('access content'),
        'file' => 'form_fun.tree.inc',
        'weight' => 3,
    );

    $items['form_fun/states'] = array(
        'title' => "Partners!",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('form_fun_states'),
        'access arguments' => array('access content'),
        'file' => 'form_fun.states.inc',
        'weight' => 4,
    );

    return $items;
}

/*
 * Implements hook_form_alter().
 * Used for modifying other module's forms.
 */
function form_fun_form_alter(&$form, &$form_state, $form_id) { //Called on every form load
    //dsm($form_id); //- Find form id we want to use
    switch ($form_id) {
        case 'user_profile_form' :
            //dsm($form); //- Find out what's in the form
            $form['account']['pass']['#description'] = t('To change the current user password,
                                                            enter the new password in both fields.
                                                            Please do not use common passwords like
                                                            "password", "12345", "love".');
        break;
    }
}


/*
 * Implements hook_FORM_ID_alter().
 *
 * In this case we don't have to use the "if" or "switch" statement on form_id,
 * targets only the given form ID in the function name definition.
 */
function form_fun_form_user_register_form_alter(&$form, &$form_state, $form_id) {
    $form['account']['pass']['#description'] = t('To change the current user password,
                                                    enter the new password in both fields.
                                                    Please do not use common passwords like
                                                    "password", "12345", "love".');

    //
    $form['#validate'][] = 'form_fun_validate_good_password';
}


/*
 * Custom validation function to ensure the user does not register
 * a new account with an insecure password listed in the $bad_passwords array.
 */
function form_fun_validate_good_password($form, &$form_state) {
    //dsm($form_state);
    $bad_passwords = array("password", "12345", "love");

    if (in_array($form_state['values']['pass'], $bad_passwords)) {
        form_set_error("pass",t("Please enter a more secure password."));
    }
}